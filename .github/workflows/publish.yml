name: Publish Package

on:
  push:
    branches:
      - test_pypi_release
    tags:
      - 'v*.*.*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-

      - name: Install dependencies
        run: poetry install --with=dev

      - name: Run tests
        run: poetry run pytest

  publish-testpypi:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Configure Poetry for Test PyPI
        run: |
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry config pypi-token.testpypi ${{ secrets.TEST_PYPI_TOKEN }}

      - name: Build and Publish to Test PyPI
        run: poetry publish -r testpypi --build

      - name: Test Package Installation
        run: |
          # Create a fresh virtual environment for testing
          python -m venv test_env
          source test_env/bin/activate
          pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ result-companion
          # Verify it can be imported
          python -c "import result_companion; print('Package successfully imported')"
          # Test CLI functionality
          result-companion --help

  # publish-pypi:
  #   needs: [test, publish-testpypi]
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v3

  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10'

  #     - name: Install Poetry
  #       run: |
  #         curl -sSL https://install.python-poetry.org | python3 -
  #         echo "${HOME}/.local/bin" >> $GITHUB_PATH

  #     - name: Configure Poetry for PyPI
  #       run: |
  #         poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}

  #     - name: Build and Publish to PyPI
  #       run: poetry publish --build